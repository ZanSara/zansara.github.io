<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Publications on Sara Zan</title>
    <link>https://www.zansara.dev/publications/</link>
    <description>Recent content in Publications on Sara Zan</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Tue, 01 Mar 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://www.zansara.dev/publications/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Adopting PyQt For Beam Instrumentation GUI Development At CERN</title>
      <link>https://www.zansara.dev/publications/thpv014/</link>
      <pubDate>Tue, 01 Mar 2022 00:00:00 +0000</pubDate>
      <guid>https://www.zansara.dev/publications/thpv014/</guid>
      <description>&lt;h2 id=&#34;abstract&#34;&gt;&#xA;  Abstract&#xA;  &#xA;&lt;/h2&gt;&#xA;&lt;p&gt;As Java GUI toolkits become deprecated, the Beam Instrumentation (BI)group at CERN has investigated alternatives and selected PyQt as one of the suitable technologies for future GUIs, in accordance with the paper presented at ICALEPCS19. This paper presents tools created, or adapted, to seamlessly integrate future PyQt GUI development alongside current Java oriented workflows and the controls environment. This includes (a) creating a project template and a GUI management tool to ease and standardize our development process, (b) rewriting our previously Java-centric Expert GUI Launcher to be language-agnostic and (c) porting a selection of operational GUIs from Java to PyQt, to test the feasibility of the development process and identify bottlenecks. To conclude, the challenges we anticipate for the BI GUI developer community in adopting this new technology are also discussed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Evolution of the CERN Beam Instrumentation Offline Analysis Framework (OAF)</title>
      <link>https://www.zansara.dev/publications/thpv042/</link>
      <pubDate>Sat, 11 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://www.zansara.dev/publications/thpv042/</guid>
      <description>&lt;h2 id=&#34;abstract&#34;&gt;&#xA;  Abstract&#xA;  &#xA;&lt;/h2&gt;&#xA;&lt;p&gt;The CERN accelerators require a large number of instruments, measuring different beam parameters like position, losses, current etc. The instruments’ associated electronics and software also produce information about their status. All these data are stored in a database for later analysis. The Beam Instrumentation group developed the Offline Analysis Framework some years ago to regularly and systematically analyze these data. The framework has been successfully used for nearly 100 different analyses that ran regularly by the end of the LHC run 2. Currently it is being updated for run 3 with modern and efficient tools to improve its usability and data analysis power. In particular, the architecture has been reviewed to have a modular design to facilitate the maintenance and the future evolution of the tool. A new web based application is being developed to facilitate the users’ access both to online configuration and to results. This paper will describe all these evolutions and outline possible lines of work for further improvements.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Our Journey From Java to PyQt and Web For CERN Accelerator Control GUIs</title>
      <link>https://www.zansara.dev/publications/tucpr03/</link>
      <pubDate>Sun, 30 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://www.zansara.dev/publications/tucpr03/</guid>
      <description>&lt;h2 id=&#34;abstract&#34;&gt;&#xA;  Abstract&#xA;  &#xA;&lt;/h2&gt;&#xA;&lt;p&gt;For more than 15 years, operational GUIs for accelerator controls and some lab applications for equipment experts have been developed in Java, first with Swing and more recently with JavaFX. In March 2018, Oracle announced that Java GUIs were not part of their strategy anymore*. They will not ship JavaFX after Java 8 and there are hints that they would like to get rid of Swing as well. This was a wakeup call for us. We took the opportunity to reconsider all technical options for developing operational GUIs. Our options ranged from sticking with JavaFX, over using the Qt framework (either using PyQt or developing our own Java Bindings to Qt), to using Web technology both in a browser and in native desktop applications. This article explains the reasons for moving away from Java as the main GUI technology and describes the analysis and hands-on evaluations that we went through before choosing the replacement.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Evaluation of Qt as GUI Framework for Accelerator Controls</title>
      <link>https://www.zansara.dev/publications/msc-thesis/</link>
      <pubDate>Thu, 20 Dec 2018 00:00:00 +0000</pubDate>
      <guid>https://www.zansara.dev/publications/msc-thesis/</guid>
      <description>&lt;p&gt;This is the full-text of my MSc thesis, written in collaboration with&#xA;&lt;a href=&#34;https://www.polimi.it/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Politecnico di Milano&lt;/a&gt; and &lt;a href=&#34;https://home.cern/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CERN&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;Get the full text here: &lt;a href=&#34;https://www.zansara.dev/publications/msc-thesis.pdf&#34; &gt;Evaluation of Qt as GUI Framework for Accelerator Controls&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Publisher&amp;rsquo;s entry: &lt;a href=&#34;https://hdl.handle.net/10589/144860&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;10589/144860&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
